@mixin double-border($position: bottom) {
	position: relative;

	&:before {
		position: absolute;
		content: '';
		display: block;
		background-color: #f1f1f1;
	}

	@if $position == 'bottom' {
		border-bottom: 1px solid #e2e3e3;
		&:before {
			width: 100%;
			height: 1px;
			left: 0;
			right: 0;
			bottom: 0;
		}
	} @else if $position == 'right' {
		border-right: 1px solid #e2e3e3;
		&:before {
			height: 100%;
			top: 0;
			bottom: 0;
			right: 0;
			width: 1px;
		}
	}
}

@mixin size($size) {
	width: $size;
	min-width: $size;
	height: $size;
	min-height: $size;
}

@mixin row($gap: 30px,
					 $gap-btm: 25px,
					 $vcenter: false,
					 $hcenter: true,
					 $col-stretch: true,
					 $desktop-count: 4,
					 $tablet-count: 3,
					 $landscape-count: 2,
					 $portrait-count: 1) {
	display: flex;

	@if $vcenter {
		align-items: center;
	}

	@if $hcenter {
		justify-content: center;
	} @else {
		justify-content: space-between;
	}

	@if $col-stretch == false {
		flex-flow: row wrap;
	}

	.col {
		margin-right: $gap;

		@media screen and (min-width: 1024px) {
			flex-basis: percentage(1/$desktop-count);
			margin-bottom: $gap-btm;
			margin-right: 0;
			padding: 0 $gap / 2;

			&:nth-child(even) {
				margin-right: 0;
			}
		}

		@if $col-stretch {
			flex: 1;
		}

		&:last-child {
			margin-right: 0;
		}
	}

	@media screen and (max-width: $tablet) {
		flex-flow: row wrap;
		margin-left: (-$gap / 2);
		margin-right: (-$gap / 2);

		.col {
			flex-basis: percentage(1/$tablet-count);
			margin-bottom: $gap-btm;
			margin-right: 0;
			padding: 0 $gap / 2;

			&:nth-child(even) {
				margin-right: 0;
			}
		}
	}

	@media screen and (max-width: $mobile) {
		margin-left: 0;
		margin-right: 0;
	}

	@media screen and (max-width: $tablet-portrait) {
		flex-flow: row wrap;

		.col {
			flex-basis: percentage(1/$landscape-count);

		}
	}

	@media screen and (max-width: $portrait) {
		flex-flow: row wrap;

		.col {
			flex-basis: percentage(1/$portrait-count);
		}
	}
}

@mixin placeholder {
  &::-webkit-input-placeholder {@content}
  &:-moz-placeholder           {@content}
  &::-moz-placeholder          {@content}
  &:-ms-input-placeholder      {@content}
}

// Responsive
// -----------------------------

@mixin max-width($width) {
	@media screen and (max-width: $width) {
		@content;
	}
}

@mixin min-width($width) {
	@media screen and (min-width: $width) {
		@content;
	}
}

@mixin ipad-portrait {
  @media all and (device-width: 768px) and (device-height: 1024px) and (orientation:portrait) {
    @content;
  }
}

@mixin collapse($from, $mb) {
  @media (max-width: $from) {
    flex-direction: column;

    > * {
      margin-right: 0;
      margin-bottom: $mb;

      &:last-child {
        margin-bottom: 0;
      }
    }
  }
}

@mixin mobile-grid($size, $gap) {
	flex-flow: row wrap;

	@include max-width($desktop) {
		.grid-item {
			flex-basis: calc( #{$size} - #{$gap} );
			margin-bottom: 40px;

			&:nth-child(even) {
				margin-right: 0;
			}

			img {
				margin-left: auto;
				margin-right: auto;
			}
		}
	}

	@include max-width($landscape) {
		.grid-item {
			flex-basis: 100%;
			margin-right: 0;
		}
	}
}

@mixin hover($type, $color, $duration, $customCb: false) {
	@if $customCb == 'false' {
		transition: $type $duration ease;
	} @else {
		transition: $type $duration $cb;
	}

	&:hover {
		#{$type}: $color;
	}
}

@mixin active($size, $transparency: .5) {
	&:active {
		box-shadow: inset 0 0 $size rgba(0, 0, 0, $transparency);
	}
}

@mixin triangle($width, $height, $color, $direction: bottom) {
	width: 0;
	height: 0;
	border-style: solid;

	@if $direction == 'bottom' {
		border-width: $height $width/2 0 $width/2;
		border-color: $color transparent transparent transparent;
	}

	@else if $direction == 'top' {
		border-width: 0 $width/2 $height $width/2;
		border-color: transparent transparent $color transparent;
	}

	@else if $direction == 'left' {
		border-width: $height/2 $width $height/2 0;
		border-color: transparent transparent $color transparent;
	}

	@else if $direction == 'right' {
		border-width: $height/2 0 $height/2 $width;
		border-color: transparent transparent transparent $color;
	}
}

// Placeholder extens
%v-c {
	display: flex;
	align-items: center;
}

%v-h-c {
	display: flex;
	align-items: center;
	justify-content: center;
}

%f-col {
	display: flex;
	flex-direction: column;
}

%pseudo {
	display: block;
	content: '';
	position: absolute;
}

%link-hover {
	transition: color 380ms $cb-qck;

	&:hover {
		color: $aquam;
	}

	&:active {
		color: $green;
	}
}

@mixin css-checkmark-standalone($width, $height, $border-width, $bg, $left, $top) {
	&:after {
		@extend %center-checkmark;
		width: $width;
		height: $height;
		border: solid $bg;
		border-width: 0 $border-width $border-width 0;
		transform: rotate(45deg);
		left: 0; right: 0; bottom: 0;
		margin: auto;
	}
}

@mixin circle-icon($size) {
	width: $size;
	height: $size;
	line-height: $size;
	border-radius: 50%;
}

@mixin circle($size) {
	width: $size;
	height: $size;
	border-radius: 50%;
	display: flex;
	align-items: center;
	justify-content: center;
}

@mixin icon-size($size) {
  font-size: $size;
  width: $size;
  height: $size;
}
